@page
@using Models
@model IndexModel
@{
    List<float> currencies = new List<float>();
    List<DateTime> dates = new List<DateTime>();
    List<int> counts = new List<int>();
    List<string> names = new List<string>();
    string valuteName = " ";
    @* List<List<Course>> test = Model.ListOfCourses; *@
}
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - DSRProject</title>
    @* <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" /> *@
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
</head>

<div class="text-center" style="margin-bottom: 70px">
    @if(Model.Valutes.Count() == 0) {
        <p> No data </p>
    }
    <p>Курс валют по отношению к рублю</p>
    <div class="container my-4">
        <div>
            <canvas id="lineChart"></canvas>
        </div>
    </div>
    @foreach (var listOfCourses in Model.ListOfCourses) {
        var count = 0;
        foreach(var course in listOfCourses) {
            currencies.Add(course.Value);
            dates.Add(@course.Date);
            count++;
            valuteName = @course.Currency.Name;
        }
        counts.Add(count);
        names.Add(valuteName);
    }
    <form method="post">
        <div class="form-group">
            <input type="date" class="form-control" asp-for="FirstDate"/>
            <input type="date" class="form-control" asp-for="SecondDate"/>
        </div>
        <button class="btn btn-secondary" style="margin-top:10px" onclick="ShowChart()">Сравнить</button>
        <ul class="list-group">
            @foreach (var valute in Model.Valutes) {
                <div class="form-check" style="display: flex">
                    <input class="form-check-input" type="checkbox" value="@valute.CurrencyId" name="checkedCheckboxes" id="flexCheckDefault" checked="true">
                    <a href="/Details?ValuteId=@valute.CurrencyId" class="link-primary" style="margin-left: 15px;">@valute.Name</a>
                </div>
            }
        </ul>
    </form>
</div>
<script>
    $(document).ready(function ShowChart() {
        var currenciesArray = [];
        var datesArray = [];
        var countsArray = [];
        var namesArray = [];
        @foreach (var currency in currencies)
        {
            @:currenciesArray.push("@currency".replace(",", "."));
        }
        @foreach (var date in dates)
        {
            @:datesArray.push("@date".split(' ')[0]);
        }
        @foreach (var count in counts)
        {
            @:countsArray.push("@count");
        }
        @foreach (var name in names)
        {
            @:namesArray.push("@name");
        }
        console.log(currenciesArray, datesArray, countsArray, namesArray);
        console.log(currenciesArray.length)
        if (currenciesArray.length == 0) {
            document.querySelector('.my-4').style.maxWidth = "0px";
        }

        var dataset = [];
        var start = 0;
        for (var i = 0; i < countsArray.length; i++) {
            var datavalues = currenciesArray.slice(start, start + parseInt(countsArray[i]));
            start = start + parseInt(countsArray[i]);
            var sequence = namesArray[i];
            var spaceIndex = sequence.indexOf(' ') / 7;
            var charCode = sequence.split(/[;\s]+/g)
                .filter((v) => v)
                .map((v) => Number.parseInt(v.replace(/&#/, '0')))
            var ASCIIName = String.fromCharCode(...charCode)
            var ASCIINameWithSpace = ASCIIName.substring(0, spaceIndex) + " " + ASCIIName.substring(spaceIndex, ASCIIName.length)
            var cur = {
            label: ASCIINameWithSpace,
            data: datavalues.reverse(),
            backgroundColor: [
                'rgba(105, 0, 132, .2)',
            ],
            borderColor: [
                'rgba(200, 99, 132, .7)',
            ],
            borderWidth: 2}
            dataset.push(cur);
        }
        console.log(dataset);
        var ctxL = document.getElementById("lineChart").getContext('2d');
        var myLineChart = new Chart(ctxL, {
        type: 'line', 
        data: {
            labels: datesArray.slice(0, countsArray[0]).reverse(),
            datasets: dataset
        },
        options: {
            responsive: true
        }
    });
        @* var k = @test.ElementAt(0).ElementAt(0).Value;
        console.log(k); *@
        @* for (var i = 0; i < @test.Count(); i++) {
            var valuesArray = [];
            var datesArray = [];
            for (var j = 0; j < @test[0].Count(); j++) {

            }
        } *@
        @* var valuesArray = [];
        var datesArray = []; *@
        @* @foreach (var d in test)
        {
            float[] valuesArray = new float[] { };
            DateTime[] datesArray = new DateTime[] { };
            string name = "";
            @foreach (var d1 in d)
            {
                valuesArray.Append(d1.Value);
                datesArray.Append(d1.Date);
                name = d1.Valute.Name;
            }
        } *@

        @* @foreach (var d in values)
        {
            @:valuesArray.push("@d".replace(",", "."));
        }
        @foreach (var d in dates)
        {
            @:datesArray.push("@d".split(' ')[0]);
        } *@
    });
</script>

@* <script>
    function ShowChart() {
    var k = [];
    test.forEach
    for(var i = 0; i < 2; i++) {
        var k1 = {
        label: "My First dataset",
          data: [i, i + 59, 80, 81, 56, 55, 40],
          backgroundColor: [
            'rgba(105, 0, 132, .2)',
          ],
          borderColor: [
            'rgba(200, 99, 132, .7)',
          ],
          borderWidth: 2}
          k.push(k1);
    }
    var ctxL = document.getElementById("lineChart").getContext('2d');
    var myLineChart = new Chart(ctxL, {
    type: 'line',
    data: {
      labels: ["January", "February", "March", "April", "May", "June", "July"],
      datasets: k
    },
    options: {
      responsive: true
    }
  });
    }
</script> *@